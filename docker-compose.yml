services:
  api_interact: 
    build: ./src/api/interact_model/
    image: neevaiti/api_interact:latest
    ports:
      - 12600:12600
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - API_MODEL_KEY=${API_MODEL_KEY}
      - API_KEY=${API_KEY}
    networks:
      - api_network

  api_model:
    build: ./src/api/model/
    image: neevaiti/api_model:latest
    ports:
      - 12500:12500
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - API_MODEL_KEY=${API_MODEL_KEY}
      - API_KEY=${API_KEY}
    networks:
      - api_network
    volumes:
      - models:/app/models

  api_database:
    build: ./src/api/database/
    image: neevaiti/api_database:latest
    ports:
      - 12400:12400
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - DB_API_KEY=${DB_API_KEY}
    networks:
      - api_network

  web:
    build: ./src/website/
    image: neevaiti/web:latest
    ports:
      - 12700:12700
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - API_MODEL_KEY=${API_MODEL_KEY}
      - API_KEY=${API_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    networks:
      - api_network
    depends_on:
      - api_interact
      - api_model
      - api_database

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - api_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - api_network

networks:
  api_network:
    driver: bridge

volumes:
  models:
  grafana-storage:
