name: CD Pipeline

on:
  push:
    branches:
      - main  # DÃ©ployer sur la branche main

jobs:
  build_and_push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
      API_MODEL_KEY: ${{ secrets.API_MODEL_KEY }}
      API_KEY: ${{ secrets.API_KEY }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker images
        run: |
          docker compose build
          docker compose push

#  deploy_interact:
#    name: Deploy API Interact to Azure Container Instances
#    runs-on: ubuntu-latest
#    needs: build_and_push
#
#    steps:
#      - name: Azure Login
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#      - name: Deploy API Interact to Azure Container Instances
#        uses: azure/aci-deploy@v1
#        with:
#          resource-group: ${{ secrets.RESOURCE_GROUP }}
#          dns-name-label: api-interact
#          image: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/api_interact:latest
#          registry-login-server: docker.io
#          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
#          registry-password: ${{ secrets.DOCKERHUB_PASSWORD }}
#          name: api-interact-container
#          location: francecentral
#          ports: '12600'
#          secure-environment-variables: |
#            DB_HOST=${{ secrets.DB_HOST }}
#            DB_USER=${{ secrets.DB_USER }}
#            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
#            DB_NAME=${{ secrets.DB_NAME }}
#            DB_PORT=${{ secrets.DB_PORT }}
#            API_MODEL_KEY=${{ secrets.API_MODEL_KEY }}
#            API_KEY=${{ secrets.API_KEY }}

#  deploy_model:
#    name: Deploy Model API to Azure Container Instances
#    runs-on: ubuntu-latest
#    needs: build_and_push
#
#    steps:
#      - name: Azure Login
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#      - name: Deploy Model API to Azure Container Instances
#        uses: azure/aci-deploy@v1
#        with:
#          resource-group: ${{ secrets.RESOURCE_GROUP }}
#          dns-name-label: api-model
#          image: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/api_model:latest
#          registry-login-server: docker.io
#          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
#          registry-password: ${{ secrets.DOCKERHUB_PASSWORD }}
#          name: api-model-container
#          location: francecentral
#          ports: '12500'
#          secure-environment-variables: |
#            DB_HOST=${{ secrets.DB_HOST }}
#            DB_USER=${{ secrets.DB_USER }}
#            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
#            DB_NAME=${{ secrets.DB_NAME }}
#            DB_PORT=${{ secrets.DB_PORT }}
#            API_MODEL_KEY=${{ secrets.API_MODEL_KEY }}
#            API_KEY=${{ secrets.API_KEY }}

#  deploy_database:
#    name: Deploy API Database to Azure Container Instances
#    runs-on: ubuntu-latest
#    needs: build_and_push
#
#    steps:
#      - name: Azure Login
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#      - name: Deploy API Database to Azure Container Instances
#        uses: azure/aci-deploy@v1
#        with:
#          resource-group: ${{ secrets.RESOURCE_GROUP }}
#          dns-name-label: api-database
#          image: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/api_database:latest
#          registry-login-server: docker.io
#          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
#          registry-password: ${{ secrets.DOCKERHUB_PASSWORD }}
#          name: api-database-container
#          location: francecentral
#          ports: '12400'
#          secure-environment-variables: |
#            DB_HOST=${{ secrets.DB_HOST }}
#            DB_USER=${{ secrets.DB_USER }}
#            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
#            DB_NAME=${{ secrets.DB_NAME }}
#            DB_PORT=${{ secrets.DB_PORT }}
#            DB_API_KEY=${{ secrets.DB_API_KEY }}

#  deploy_web:
#    name: Deploy Web to Azure Container Instances
#    runs-on: ubuntu-latest
#    needs: build_and_push
#
#    steps:
#      - name: Azure Login
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
#
#      - name: Deploy Web to Azure Container Instances
#        uses: azure/aci-deploy@v1
#        with:
#          resource-group: ${{ secrets.RESOURCE_GROUP }}
#          dns-name-label: web-app
#          image: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/web:latest
#          registry-login-server: docker.io
#          registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
#          registry-password: ${{ secrets.DOCKERHUB_PASSWORD }}
#          name: web-container
#          location: francecentral
#          ports: '12700'
#          secure-environment-variables: |
#            DB_HOST=${{ secrets.DB_HOST }}
#            DB_USER=${{ secrets.DB_USER }}
#            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
#            DB_NAME=${{ secrets.DB_NAME }}
#            DB_PORT=${{ secrets.DB_PORT }}
#            API_MODEL_KEY=${{ secrets.API_MODEL_KEY }}
#            API_KEY=${{ secrets.API_KEY }}
#            SECRET_KEY=${{ secrets.SECRET_KEY }}
#            DEBUG=${{ secrets.DEBUG }}
#            ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
