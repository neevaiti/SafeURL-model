name: CI/CD Pipeline

on:
  push:
    branches:
      - dev  # Exécuter les tests et build sur la branche dev
      - main  # Déployer sur la branche main

jobs:
  test:
    name: Run tests with SQLite in-memory
    runs-on: ubuntu-latest
    env:
      IS_TEST: true  # Mode test pour utiliser SQLite
      DB_HOST: localhost
      DB_USER: test_user
      DB_PASSWORD: test_password
      DB_NAME: test_db
      DB_PORT: 5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest

  build_and_push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test
    env:
      IS_TEST: false  # Mode production
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: 5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Copy .env for production
        run: |
          cp .env.prod .env  
          cat .env  # Vérifier les valeurs

      - name: Build and Push api_model image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api_model:latest -f src/api/model/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/api_model:latest

      - name: Build and Push api_interact image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api_interact:latest -f src/api/interact_model/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/api_interact:latest

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy with Docker Compose
        run: |
          docker-compose -f docker-compose.prod.yml up --build -d
